// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace LaTiendaIs.SpecFlow.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ObtenerStockDelArticulo")]
    public partial class ObtenerStockDelArticuloFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "ObtenerStockDelArticulo.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ObtenerStockDelArticulo", "A short summary of the feature", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ObtenerListaDeStockDelArticulo")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public void ObtenerListaDeStockDelArticulo()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ObtenerListaDeStockDelArticulo", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "CodigoTienda",
                            "Descripcion",
                            "Costo",
                            "MargenDeGanacia",
                            "PorcentajeIVA"});
                table2.AddRow(new string[] {
                            "1000",
                            "Remera",
                            "1000",
                            "15",
                            "0.21"});
#line 7
 testRunner.Given("Existe el siguiente articulo:", ((string)(null)), table2, "Given ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Cantidad",
                            "Sucursal",
                            "Articulo",
                            "Talle",
                            "Color"});
                table3.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "XL",
                            "Rojo"});
                table3.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "XL",
                            "Azul"});
                table3.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "L",
                            "Rojo"});
                table3.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1001",
                            "L",
                            "Rojo"});
#line 10
 testRunner.And("el Stock:", ((string)(null)), table3, "And ");
#line hidden
#line 17
 testRunner.When("se introduce el codigo 1000", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Cantidad",
                            "Sucursal",
                            "Articulo",
                            "Talle",
                            "Color"});
                table4.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "XL",
                            "Rojo"});
                table4.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "XL",
                            "Azul"});
                table4.AddRow(new string[] {
                            "1",
                            "Barrio Norte",
                            "1000",
                            "L",
                            "Rojo"});
#line 18
 testRunner.Then("el sistema muestre la lista de Stock del articulo:", ((string)(null)), table4, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
