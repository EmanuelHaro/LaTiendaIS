@page "/realizarpago"


@using LaTiendaIS.Shared;
@using LaTiendaIS.Client.Service.Contrato;
@inject IArticuloServicio _articuloServicio

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<!--Pagar-->
@using LaTiendaIS.Shared;
@using LaTiendaIS.Client.Service.Contrato;
@inject IArticuloServicio _articuloServicio
@inject IVentaServicio _ventaServicio
@inject ILineaDeVentaServicio _lineadeventaServicio


@using System.Net.Http.Json

@using MudBlazor
@inject ISnackbar Snackbar
@inject NavigationManager _navManager


@inject HttpClient httpClient

<h2>Realizar el pago</h2>
<div class="d-flex" style="max-width: 600px; margin: 20px ;">
    <MudSelect T="string" Label="Elegir medio de pago" AnchorOrigin="Origin.BottomCenter" @bind-Value="medioDePago">
        <MudSelectItem Value="@("")" />
        <MudSelectItem Value="@("Efectivo")" />
        <MudSelectItem Value="@("Con Tarjeta")" />
    </MudSelect>
</div>

<div class="d-flex flex-column" style="max-width: 600px; margin: 20px;" @key="medioDePago">
    @if (string.IsNullOrWhiteSpace(medioDePago))
    {
        <p>Por favor, selecciona un medio de pago.</p>
    }
    else if (medioDePago == "Efectivo")
    {
        <div>
            <p>Total a pagar: @totalAPagar</p>
            <br />
            <p>Monto Recibido: <input type="number" @bind="montoRecibido" /></p>
            <br />
            <p>Vuelto: @calcularVuelto()</p>
        </div>
        <div class="d-flex" style="max-width: 300px; margin: 20px;">
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="IrAListarArticulos">Cancelar</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="() => Pagar()" style="margin-left: 30px;">Pagar</MudButton>
        </div>
    }
    else if (medioDePago == "Con Tarjeta")
    {
        <div>
                    <MudGrid Class="justify-space-between" Style="max-width: 300px;">
                        <MudItem xs="12">
                    <MudTextField Label="Nombre del Titular" @bind-Value="nombreTitular" Variant="@Variant.Text" MaxLength="40" />
                        </MudItem>
                        <MudItem xs="6">
                    <MudTextField Mask="@(new PatternMask("00000000"))" Label="DNI" @bind-Value="dniTitular" Variant="@Variant.Text" />
                        </MudItem>
                        <MudItem xs="12">
                            <MudTextField Mask="@(new PatternMask("0000 0000 0000 0000"))" Label="Numero de Tarjeta"
                                          @bind-Value="creditCard" Variant="@Variant.Text" Clearable />
                         </MudItem>
                         <MudItem xs="4">
                             <MudTextField Mask="@(new DateMask("MM/YY", 'Y', 'M'))" Label="Vencimiento"
                                           @bind-Value="expiration" Variant="@Variant.Text" />
                         </MudItem>
                        <MudItem xs="4" />
                        <MudItem xs="4">
                             <MudTextField Mask="@(new PatternMask("000"))" Label="CVV"
                                @bind-Value="cvv" Variant="@Variant.Text" />
                        </MudItem>

                         <MudItem xs="12">
                            Nombre del Titular: <b>@nombreTitular</b><br />
                            DNI: <b>@dniTitular</b><br />
                            Numero de Tarjeta: <b>@creditCard</b><br />
                            Fecha de Venc: <b>@expiration</b><br />
                            CVV: <b>@cvv</b>                 
                        </MudItem>
                    </MudGrid>

        </div>
        <div class="d-flex" style="max-width: 300px; margin: 20px;">
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="IrAListarArticulos">Cancelar</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="IrAListarArticulos" style="margin-left: 30px;">Autorizar Pago</MudButton>
        </div>       
    }
</div>



@code {
    //Tarjeta
    private string nombreTitular;
    private string dniTitular;
    private string creditCard;
    private string expiration;
    private string cvv;

    //Medios de PAgo
    private string medioDePago = "";
    private double totalAPagar; // Cargado en OnInitializedAsync
    private double montoRecibido;

    public VentaDTO venta1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await _ventaServicio.ObtenerUltimaVenta();
            if (response != null)
            {
                venta1 = response;
                Snackbar.Add("Ultima venta cargada", Severity.Success);
                totalAPagar = venta1.Total;
            }
        }
        catch(Exception ex)
        {
            Snackbar.Add("Ultima venta no cargada", Severity.Error);
        }

    }

    private double calcularVuelto()
    {
        return montoRecibido - totalAPagar;
    }

    // Método para manejar el clic y redirigir a la página "ListarArticulos"
    private void IrAListarArticulos()
    {
        _navManager.NavigateTo("/listadoArticulos"); // Ajusta la ruta según la estructura de tu aplicación
    }

    private async void Pagar()
    {

        var response = await _ventaServicio.ModificarVenta(venta1.IdVenta, venta1);


        _navManager.NavigateTo("/realizarpago");
        Snackbar.Add("Pagó", Severity.Success);
    }
}
